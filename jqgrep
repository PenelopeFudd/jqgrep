#!/bin/bash

# Parse arguments:
FLAGS=""
while getopts :ckvodimnpsx opt; do
  case "$opt" in
    c) COMMANDS=1;;
    k) KEYS=1;;
    v) VALUES=1;;
    o) ONLYKEYS=1;;
    d) ONLYVALUES=1;;
    i|m|n|p|s|x) FLAGS+=$opt;;
    \?) echo "Error, option '$OPTARG' is unknown."; err=1;;
  esac
done
shift $(( $OPTIND - 1 ))

PATTERN="$1"
FILE="$2"
if [[ "$err" != "" || "$PATTERN" == "" ]]; then
  echo "Usage: ${0##*/} [-c|-k|-v|-o|-d] [-i|-m|-n|-p|-s|-x] pattern [json-files...]
  This program will search json files for the given pattern as a key or
  value and optionally print the jq command for retrieving it.

Options:
    -c: Show matches as jq commands
    -k: Only match keys
    -v: Only match values
    -o: Only show keys of matches
    -d: Only show values of matches
    -i: Case insensitive search
    -n: Ignore empty matches
    -s: Single line mode (´^´ -> ´\\A´, ´\$´ -> ´\\Z´)
    -m: Multi line mode (´.´ will match newlines)
    -p: Both s and m modes are enabled
    -x: Extended regex format (ignore whitespace and comments)"
  exit 1
fi

# If not specified, match keys or values:
if [[ "$KEYS" == "" && "$VALUES" == "" ]]; then
  KEYS=1
  VALUES=1
fi

if ! which jq > /dev/null 2>&1; then echo "The 'jq' command is not installed, aborting." >&2; exit 1; fi

# We've gotten the pattern, now shift so all that remains in $@ are the filenames:
shift

jq -r \
  --arg pattern "$PATTERN" \
  --arg commands "$COMMANDS" \
  --arg keys "$KEYS" \
  --arg values "$VALUES" \
  --arg flags "$FLAGS" \
  --arg onlykeys "$ONLYKEYS" \
  --arg onlyvalues "$ONLYVALUES" \
  '
def jqpath:
  def t: test("^[A-Za-z_][A-Za-z0-9_]*$");
  reduce .[] as $x
    ("";
     if ($x|type) == "string"
     then . + ($x | if t then ".\(.)" else  ".[" + tojson + "]" end)
     else . + "[\($x)]"
     end);

  paths as $path
    | (if ($onlykeys   == "") then (getpath($path) | "\(.)") else "" end ) as $myval
    | (if ($onlykeys   == "") then " # \($myval)"            else "" end ) as $cmyval
    | select(
    (
      (
        $values != ""
      ) and (
        (
          ( getpath($path) | type ) == "string"
        ) or (
          ( getpath($path) | type ) == "number"
        )
      ) and (
        getpath($path) | tostring | test($pattern;$flags)
      )
    ) or (
      (
        $keys != ""
      ) and (
        "\($path[-1])" | test($pattern;$flags)
      )
    )
    ) | $path | . as $gp | jqpath
    | (input_filename | sub( "^(<stdin>|/dev/fd/[0-9]*)$" ; "" )) as $input
    | if ($onlyvalues == "1") then
        $myval
      else
        (
          if ( $commands != "" ) then
             "jq \u0027\(.)\u0027 \($input)\($cmyval)"
          else
             "\(if $input == "" then "" else $input + ": " end)\(.)\($cmyval)"
          end
        )
      end
' "$@"
